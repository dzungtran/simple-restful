// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/seat/services/seat_svc.proto

package seat_svc // import "simple-restful/exmsgs/seat/services"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import models "simple-restful/exmsgs/seat/models"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Messages
type SeatsRequest struct {
	List        []*models.Seat `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	MinDistance int64          `protobuf:"varint,2,opt,name=min_distance,json=minDistance" json:"min_distance,omitempty"`
	Session     string         `protobuf:"bytes,3,opt,name=session" json:"session,omitempty"`
	// Confirm booking
	Confirm              bool     `protobuf:"varint,4,opt,name=confirm" json:"confirm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeatsRequest) Reset()         { *m = SeatsRequest{} }
func (m *SeatsRequest) String() string { return proto.CompactTextString(m) }
func (*SeatsRequest) ProtoMessage()    {}
func (*SeatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_seat_svc_b0c4d5268116679f, []int{0}
}
func (m *SeatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatsRequest.Unmarshal(m, b)
}
func (m *SeatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatsRequest.Marshal(b, m, deterministic)
}
func (dst *SeatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatsRequest.Merge(dst, src)
}
func (m *SeatsRequest) XXX_Size() int {
	return xxx_messageInfo_SeatsRequest.Size(m)
}
func (m *SeatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SeatsRequest proto.InternalMessageInfo

func (m *SeatsRequest) GetList() []*models.Seat {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SeatsRequest) GetMinDistance() int64 {
	if m != nil {
		return m.MinDistance
	}
	return 0
}

func (m *SeatsRequest) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *SeatsRequest) GetConfirm() bool {
	if m != nil {
		return m.Confirm
	}
	return false
}

type SeatsResult struct {
	Available            []*models.Seat `protobuf:"bytes,1,rep,name=available" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SeatsResult) Reset()         { *m = SeatsResult{} }
func (m *SeatsResult) String() string { return proto.CompactTextString(m) }
func (*SeatsResult) ProtoMessage()    {}
func (*SeatsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_seat_svc_b0c4d5268116679f, []int{1}
}
func (m *SeatsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatsResult.Unmarshal(m, b)
}
func (m *SeatsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatsResult.Marshal(b, m, deterministic)
}
func (dst *SeatsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatsResult.Merge(dst, src)
}
func (m *SeatsResult) XXX_Size() int {
	return xxx_messageInfo_SeatsResult.Size(m)
}
func (m *SeatsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatsResult.DiscardUnknown(m)
}

var xxx_messageInfo_SeatsResult proto.InternalMessageInfo

func (m *SeatsResult) GetAvailable() []*models.Seat {
	if m != nil {
		return m.Available
	}
	return nil
}

type SeatAvailabilityResult struct {
	Available            []*models.Seat `protobuf:"bytes,1,rep,name=available" json:"available,omitempty"`
	Unavailable          []*models.Seat `protobuf:"bytes,2,rep,name=unavailable" json:"unavailable,omitempty"`
	Session              string         `protobuf:"bytes,3,opt,name=session" json:"session,omitempty"`
	Status               string         `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SeatAvailabilityResult) Reset()         { *m = SeatAvailabilityResult{} }
func (m *SeatAvailabilityResult) String() string { return proto.CompactTextString(m) }
func (*SeatAvailabilityResult) ProtoMessage()    {}
func (*SeatAvailabilityResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_seat_svc_b0c4d5268116679f, []int{2}
}
func (m *SeatAvailabilityResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatAvailabilityResult.Unmarshal(m, b)
}
func (m *SeatAvailabilityResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatAvailabilityResult.Marshal(b, m, deterministic)
}
func (dst *SeatAvailabilityResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatAvailabilityResult.Merge(dst, src)
}
func (m *SeatAvailabilityResult) XXX_Size() int {
	return xxx_messageInfo_SeatAvailabilityResult.Size(m)
}
func (m *SeatAvailabilityResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatAvailabilityResult.DiscardUnknown(m)
}

var xxx_messageInfo_SeatAvailabilityResult proto.InternalMessageInfo

func (m *SeatAvailabilityResult) GetAvailable() []*models.Seat {
	if m != nil {
		return m.Available
	}
	return nil
}

func (m *SeatAvailabilityResult) GetUnavailable() []*models.Seat {
	if m != nil {
		return m.Unavailable
	}
	return nil
}

func (m *SeatAvailabilityResult) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *SeatAvailabilityResult) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_seat_svc_b0c4d5268116679f, []int{3}
}
func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (dst *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(dst, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type ResultResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultResponse) Reset()         { *m = ResultResponse{} }
func (m *ResultResponse) String() string { return proto.CompactTextString(m) }
func (*ResultResponse) ProtoMessage()    {}
func (*ResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_seat_svc_b0c4d5268116679f, []int{4}
}
func (m *ResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultResponse.Unmarshal(m, b)
}
func (m *ResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultResponse.Marshal(b, m, deterministic)
}
func (dst *ResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultResponse.Merge(dst, src)
}
func (m *ResultResponse) XXX_Size() int {
	return xxx_messageInfo_ResultResponse.Size(m)
}
func (m *ResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResultResponse proto.InternalMessageInfo

func (m *ResultResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*SeatsRequest)(nil), "protos.seat.services.SeatsRequest")
	proto.RegisterType((*SeatsResult)(nil), "protos.seat.services.SeatsResult")
	proto.RegisterType((*SeatAvailabilityResult)(nil), "protos.seat.services.SeatAvailabilityResult")
	proto.RegisterType((*EmptyRequest)(nil), "protos.seat.services.EmptyRequest")
	proto.RegisterType((*ResultResponse)(nil), "protos.seat.services.ResultResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SeatService service

type SeatServiceClient interface {
	GetAvailableSeats(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SeatsResult, error)
	BookSeats(ctx context.Context, in *SeatsRequest, opts ...grpc.CallOption) (*SeatAvailabilityResult, error)
	Reset(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ResultResponse, error)
}

type seatServiceClient struct {
	cc *grpc.ClientConn
}

func NewSeatServiceClient(cc *grpc.ClientConn) SeatServiceClient {
	return &seatServiceClient{cc}
}

func (c *seatServiceClient) GetAvailableSeats(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*SeatsResult, error) {
	out := new(SeatsResult)
	err := grpc.Invoke(ctx, "/protos.seat.services.SeatService/GetAvailableSeats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *seatServiceClient) BookSeats(ctx context.Context, in *SeatsRequest, opts ...grpc.CallOption) (*SeatAvailabilityResult, error) {
	out := new(SeatAvailabilityResult)
	err := grpc.Invoke(ctx, "/protos.seat.services.SeatService/BookSeats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *seatServiceClient) Reset(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := grpc.Invoke(ctx, "/protos.seat.services.SeatService/Reset", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SeatService service

type SeatServiceServer interface {
	GetAvailableSeats(context.Context, *EmptyRequest) (*SeatsResult, error)
	BookSeats(context.Context, *SeatsRequest) (*SeatAvailabilityResult, error)
	Reset(context.Context, *EmptyRequest) (*ResultResponse, error)
}

func RegisterSeatServiceServer(s *grpc.Server, srv SeatServiceServer) {
	s.RegisterService(&_SeatService_serviceDesc, srv)
}

func _SeatService_GetAvailableSeats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeatServiceServer).GetAvailableSeats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.seat.services.SeatService/GetAvailableSeats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeatServiceServer).GetAvailableSeats(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SeatService_BookSeats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SeatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeatServiceServer).BookSeats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.seat.services.SeatService/BookSeats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeatServiceServer).BookSeats(ctx, req.(*SeatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SeatService_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SeatServiceServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.seat.services.SeatService/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SeatServiceServer).Reset(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SeatService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.seat.services.SeatService",
	HandlerType: (*SeatServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAvailableSeats",
			Handler:    _SeatService_GetAvailableSeats_Handler,
		},
		{
			MethodName: "BookSeats",
			Handler:    _SeatService_BookSeats_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _SeatService_Reset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/seat/services/seat_svc.proto",
}

func init() {
	proto.RegisterFile("protos/seat/services/seat_svc.proto", fileDescriptor_seat_svc_b0c4d5268116679f)
}

var fileDescriptor_seat_svc_b0c4d5268116679f = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xc1, 0x8a, 0xdb, 0x30,
	0x10, 0x86, 0x71, 0x92, 0xa6, 0xb5, 0x1c, 0x02, 0x15, 0x25, 0x98, 0x40, 0xc1, 0x71, 0x7b, 0xf0,
	0x21, 0x55, 0x20, 0x85, 0x1e, 0xda, 0x53, 0x43, 0x43, 0xcf, 0x55, 0x6e, 0x81, 0x12, 0x1c, 0x67,
	0x52, 0x44, 0x65, 0xcb, 0xeb, 0x91, 0xc3, 0xee, 0x73, 0xec, 0x71, 0xdf, 0x65, 0x9f, 0x6d, 0xb1,
	0x15, 0x13, 0xed, 0xe2, 0x4d, 0x16, 0xf6, 0xe6, 0x19, 0x7d, 0xff, 0xf8, 0xe7, 0xd7, 0x88, 0x7c,
	0xca, 0x0b, 0xa5, 0x15, 0xce, 0x10, 0x62, 0x3d, 0x43, 0x28, 0x0e, 0x22, 0x01, 0x53, 0x6d, 0xf0,
	0x90, 0xb0, 0xfa, 0x94, 0x7e, 0x30, 0x10, 0xab, 0xda, 0xac, 0x81, 0xc6, 0x1f, 0x6d, 0x69, 0xaa,
	0x76, 0x20, 0xcd, 0xb7, 0x11, 0x85, 0xb7, 0x0e, 0x19, 0xac, 0x20, 0xd6, 0xc8, 0xe1, 0xaa, 0x04,
	0xd4, 0x74, 0x4a, 0x7a, 0x52, 0xa0, 0xf6, 0x9d, 0xa0, 0x1b, 0x79, 0x73, 0x9f, 0xd9, 0x43, 0x8d,
	0x9c, 0x55, 0x3c, 0xaf, 0x29, 0x3a, 0x21, 0x83, 0x54, 0x64, 0x9b, 0x9d, 0x40, 0x1d, 0x67, 0x09,
	0xf8, 0x9d, 0xc0, 0x89, 0xba, 0xdc, 0x4b, 0x45, 0xf6, 0xeb, 0xd8, 0xa2, 0x3e, 0x79, 0x8b, 0x80,
	0x28, 0x54, 0xe6, 0x77, 0x03, 0x27, 0x72, 0x79, 0x53, 0x56, 0x27, 0x89, 0xca, 0xf6, 0xa2, 0x48,
	0xfd, 0x5e, 0xe0, 0x44, 0xef, 0x78, 0x53, 0x86, 0x4b, 0xe2, 0x1d, 0x4d, 0x61, 0x29, 0x35, 0xfd,
	0x46, 0xdc, 0xf8, 0x10, 0x0b, 0x19, 0x6f, 0x25, 0x5c, 0x34, 0x76, 0x42, 0xc3, 0x7b, 0x87, 0x8c,
	0xaa, 0xde, 0x4f, 0xd3, 0x11, 0x52, 0xe8, 0x9b, 0xd7, 0x8d, 0xa4, 0xdf, 0x89, 0x57, 0x66, 0x27,
	0x65, 0xe7, 0x82, 0xd2, 0x86, 0xcf, 0x24, 0x31, 0x22, 0x7d, 0xd4, 0xb1, 0x2e, 0xb1, 0x0e, 0xc2,
	0xe5, 0xc7, 0x2a, 0x1c, 0x92, 0xc1, 0x32, 0xcd, 0x2b, 0xd3, 0xf5, 0xe5, 0x84, 0x11, 0x19, 0x1a,
	0xff, 0x1c, 0x30, 0x57, 0x19, 0x82, 0xa5, 0x74, 0x6c, 0xe5, 0xfc, 0xae, 0x63, 0x22, 0x5c, 0x99,
	0x3d, 0xa0, 0x6b, 0xf2, 0xfe, 0x37, 0x34, 0x41, 0x48, 0xa8, 0xd3, 0xa5, 0x21, 0x6b, 0x5b, 0x19,
	0x66, 0xff, 0x72, 0x3c, 0x69, 0x67, 0xec, 0xeb, 0xf9, 0x4b, 0xdc, 0x85, 0x52, 0xff, 0xcf, 0xce,
	0xb4, 0x77, 0x6c, 0x3c, 0x7d, 0x9e, 0x69, 0xb9, 0xaa, 0x3f, 0xe4, 0x0d, 0x07, 0x04, 0xfd, 0x22,
	0xbb, 0x9f, 0xdb, 0x99, 0xc7, 0xa9, 0x2d, 0xd8, 0x7a, 0x8a, 0x22, 0xcd, 0x25, 0x7c, 0x29, 0x00,
	0xf5, 0xbe, 0x94, 0x33, 0xb8, 0x4e, 0xf1, 0xdf, 0x93, 0x07, 0xf6, 0xa3, 0x79, 0x60, 0xdb, 0x7e,
	0x3d, 0xf4, 0xeb, 0x43, 0x00, 0x00, 0x00, 0xff, 0xff, 0x28, 0x7e, 0x36, 0x9e, 0x88, 0x03, 0x00,
	0x00,
}
